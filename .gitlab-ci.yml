stages:
    - build
    - test
    - deploy staging
    - test staging
    - deploy production
    - test production

variables:
    APP_BASE_URL: http://YOUR-BUCKET-NAME.s3-website-YOUR-REGION.amazonaws.com
    APP_BASE_URL_STAGING: http://YOUR-BUCKET-NAME-STAGING.s3-website-YOUR-REGION.amazonaws.com

build instagram-service:
    image: golang:1.12-alpine
    stage: build
    script:
        - go mod download
        - go get -d -v ./...
        - go install -v ./...
        - go build
    artifacts:
        paths:
            - build

test instagram-service:
    image: golang:1.12-alpine
    stage: test
    script:
        - apk add curl
        - serve -s build &
        - sleep 10
        - curl http://localhost:3000

deploy to staging:
    stage: deploy staging
    image: 
        name: amazon/aws-cli:2.4.11
        entrypoint: [""]
    rules:
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    script:
        - aws --version
        - aws s3 sync build s3://$AWS_S3_BUCKET_STAGING --delete

staging tests:
    stage: test staging
    image: curlimages/curl
    rules:
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    script:
        - curl $APP_BASE_URL_STAGING

deploy to production:
    stage: deploy production
    image: 
        name: amazon/aws-cli:2.4.11
        entrypoint: [""]
    rules:
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    script:
        - aws --version
        - aws s3 sync build s3://$AWS_S3_BUCKET --delete

production tests:
    stage: test production
    image: curlimages/curl
    rules:
        - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    script:
        - curl $APP_BASE_URL 